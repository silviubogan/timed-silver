<UserControl x:Class="cs_timed_silver.ClockDataGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
             xmlns:local="clr-namespace:cs_timed_silver"
             xmlns:xceed="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:tsp="clr-namespace:wpf_timespanpicker;assembly=wpf-timespanpicker"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="110" d:DesignWidth="592.6" Name="MyClockDataGrid"
             Loaded="MyClockDataGrid_Loaded" Focusable="True"
             PreviewMouseWheel="MyUserControl_MouseWheel">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <DataTemplate x:Key="ButtonsColumnCellTemplate">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Button Command="{Binding MyToggleCommand}"
                                        ToolTip="Toggle the clock (on - off)">
                                <Viewbox>
                                    <Image Height="32">
                                        <Image.Source>
                                            <MultiBinding Converter="{StaticResource ClockToBtn}">
                                                <Binding Path="ClockType"  Mode="OneWay"/>
                                                <Binding Path="IsActive" Mode="OneWay"/>
                                            </MultiBinding>
                                        </Image.Source>
                                    </Image>
                                </Viewbox>
                            </Button>
                            <Button Grid.Column="1"
                                        Command="{Binding MyDeleteCommand}"
                                        ToolTip="Delete the clock">
                                <Viewbox>
                                    <Image Height="32"
                                               Source="/Resources/Oxygen-Icons.org-Oxygen-Actions-edit-delete.ico"></Image>
                                </Viewbox>
                            </Button>
                        </Grid>
                    </DataTemplate>

                    <DataTemplate x:Key="ResetToValueColumnCellEditingTemplate">
                        <ContentControl>
                            <ContentControl.Style>
                                <Style TargetType="ContentControl">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ClockType, Mode=OneWay}" Value="Timer">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <tsp:TimeSpanPicker MaxWidth="150" HorizontalAlignment="Center"
                                                                                Value="{Binding Path=DataContext.ResetToValue, Mode=TwoWay,
                                                                    UpdateSourceTrigger=PropertyChanged,
                                                                RelativeSource={RelativeSource Mode=FindAncestor,
                                                                    AncestorType=DataGridRow}}"/>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ClockType, Mode=OneWay}"
                                                         Value="Alarm">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <xceed:DateTimePicker
                                                                Value="{Binding Path=DataContext.ResetToValue, Mode=TwoWay,
                                                                    UpdateSourceTrigger=PropertyChanged,
                                                                RelativeSource={RelativeSource Mode=FindAncestor,
                                                                    AncestorType=DataGridRow}}"/>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </DataTemplate>

                    <DataTemplate x:Key="CurrentValueColumnCellEditingTemplate">
                        <ContentControl>
                            <ContentControl.Style>
                                <Style TargetType="ContentControl">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ClockType, Mode=OneWay}" Value="Timer">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <tsp:TimeSpanPicker MaxWidth="150" HorizontalAlignment="Center"
                                                                Value="{Binding Path=DataContext.CurrentValue, Mode=TwoWay,
                                                                    UpdateSourceTrigger=PropertyChanged,
                                                                RelativeSource={RelativeSource Mode=FindAncestor,
                                                                    AncestorType=DataGridRow}}"/>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ClockType, Mode=OneWay}" Value="Alarm">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <xceed:DateTimePicker
                                                                Value="{Binding Path=DataContext.CurrentValue, Mode=TwoWay,
                                                                    UpdateSourceTrigger=PropertyChanged,
                                                                RelativeSource={RelativeSource Mode=FindAncestor,
                                                                    AncestorType=DataGridRow}}"/>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type local:ClockType}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding DataContext.ImagePath, RelativeSource={RelativeSource Mode=FindAncestor,  AncestorType=ComboBoxItem}}" Width="16" VerticalAlignment="Center"></Image>
                            <TextBlock VerticalAlignment="Center" Text="{Binding DataContext.Name, RelativeSource={RelativeSource Mode=FindAncestor,  AncestorType=ComboBoxItem}}"></TextBlock>
                        </StackPanel>
                    </DataTemplate>

                    <local:BoolToInvisibilityConverter x:Key="BoolToInvisConv"/>
                    <local:DrawingColorToStringConverter x:Key="DrawingColorToStringConv"/>
                    <local:DrawingColorToColorConverter x:Key="DrawingColorToColorConv"/>
                    <local:ClockDataToUserClockTypeConverter x:Key="ClockDataToUserClockTypeConv"/>
                    <local:InverseBooleanConverter x:Key="InverseBoolConv"/>
                    <local:BoolToInvisibilityConverter x:Key="BoolToInvisibilityConv"/>
                    <local:FlowDocToStringConverter x:Key="FlowDocToStringConv"/>

                    <!--<local:ClockToButtonIconPathConverter x:Key="ClockToBtn"/>-->
                    <local:ClockDataToClockTypeConverter x:Key="ClockToType"/>
                    <!--<Style TargetType="{x:Type DataGrid}">
                        <Setter Property="Background" Value="Black"/>
                    </Style>

                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Background" Value="Black"/>
                    </Style>-->

                    <!-- x:Key="MyLightThemeStyle"
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Background" Value="Black"/>
                        <Setter Property="Height" Value="25"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Template" Value="{DynamicResource DataGridRowControlTemplate1}"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#FF262626"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter Property="Background" Value="#FF383838"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="#FF333333"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Background" Value="Black"/>
                        <Setter Property="SeparatorBrush" Value="#FFC9CACA"/>
                    </Style>

                    <Style x:Key="MyDarkThemeStyle" TargetType="{x:Type DataGridRow}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            
                    <Setter Property="Template" Value="{DynamicResource DataGridRowControlTemplate1}"/>

                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="Black"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="Black"/>
                        </Trigger>
                    </Style.Triggers>
                    </Style>
                    <Style x:Key="ScrollDataGridStyle1" TargetType="{x:Type local:ScrollDataGrid}">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderBrush" Value="#FF688CAF"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type local:ScrollDataGrid}">
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                                            <ScrollViewer.Template>
                                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>
                                                        <Button Command="ApplicationCommands.SelectAll" Focusable="False" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}">
                                                            <Button.Visibility>
                                                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                                    <Binding.ConverterParameter>
                                                                        <DataGridHeadersVisibility>All</DataGridHeadersVisibility>
                                                                    </Binding.ConverterParameter>
                                                                </Binding>
                                                            </Button.Visibility>
                                                        </Button>
                                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1">
                                                            <DataGridColumnHeadersPresenter.Visibility>
                                                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                                    <Binding.ConverterParameter>
                                                                        <DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
                                                                    </Binding.ConverterParameter>
                                                                </Binding>
                                                            </DataGridColumnHeadersPresenter.Visibility>
                                                        </DataGridColumnHeadersPresenter>
                                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" Grid.ColumnSpan="2" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Grid.Row="1"/>
                                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                                        <Grid Grid.Column="1" Grid.Row="2">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                                        </Grid>
                                                    </Grid>
                                                </ControlTemplate>
                                            </ScrollViewer.Template>
                                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </ScrollViewer>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="True"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>-->
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <!--
        
internal List<string> ReadOnlyColumnNames = new List<string>()
{
    "IsDirty",
    "Delete",
    "PlayPause"
};

private void ApplyImportMode()
{
    if (ImportMode)
    {
        ReadOnly = true;
        AllowDrop = false;

        Columns[(int)TimerColumns.IsDirty].Visible = false;
        Columns[(int)TimerColumns.DeleteButton].Visible = false;
        Columns[(int)TimerColumns.StartStopButton].Visible = false;

        foreach (DataGridViewColumn c in Columns)
        {
            c.ReadOnly = true;
        }
    }
    else
    {
        ReadOnly = false;
        AllowDrop = true;

        Columns[(int)TimerColumns.IsDirty].Visible = true;
        Columns[(int)TimerColumns.DeleteButton].Visible = true;
        Columns[(int)TimerColumns.StartStopButton].Visible = true;

        foreach (DataGridViewColumn c in Columns)
        {
            if (!ReadOnlyColumnNames.Contains(c.Name))
            {
                c.ReadOnly = false;
            }
        }
    }
}
-->
    <Grid>
        <!-- SETTINGS FOR IMPORT MODE:
            this.clockDataGridView1.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;
            this.clockDataGridView1.DarkMode = false;
            this.clockDataGridView1.EditMode = System.Windows.Forms.DataGridViewEditMode.EditOnEnter;
            this.clockDataGridView1.SelectionMode = System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect;
        -->
        <local:ScrollDataGrid x:Name="MyDataGrid" 
                  SelectionMode="Extended"
                  SelectionUnit="FullRow"
                    AutoGenerateColumns="False"
                  PreviewMouseRightButtonDown="MyDataGrid_PreviewMouseRightButtonDown"
                    SelectedCellsChanged="MyDataGrid_SelectedCellsChanged"
                    ItemsSource="{Binding ElementName=MyClockDataGrid, Path=Clocks.VMs}"
                    CanUserSortColumns="False"
                    CanUserAddRows="{Binding ElementName=MyClockDataGrid, Path=ImportMode,
                    Converter={StaticResource InverseBoolConv}}"
                    CanUserDeleteRows="{Binding ElementName=MyClockDataGrid, Path=ImportMode,
                    Converter={StaticResource InverseBoolConv}}"
                              RowHeight="30"
                              ColumnHeaderStyle="{StaticResource BaseDGColumnHeaderStyle}"
                              > <!-- TODO: set CanUserSortColumns="True" -->
            <local:ScrollDataGrid.Style>
                <Style TargetType="local:ScrollDataGrid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=MyClockDataGrid, Path=ImportMode}"
                                     Value="True">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Setter Property="IsReadOnly" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </local:ScrollDataGrid.Style>
            <!--
            <local:ScrollDataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="White"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFC3BCAE" Offset="0" />
                                <GradientStop Color="#FFFDCE9D" Offset="0.046" />
                                <GradientStop Color="#FFFFA35B" Offset="0.452" />
                                <GradientStop Color="#FFFF8A2C" Offset="0.461" x:Name="gs1"/>
                                <GradientStop Color="#FFFF9F30" Offset="0.724" />
                                <GradientStop Color="#FFFFC472" Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="White"/>
                                    <!- <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF8E8165" Offset="0" />
                                        <GradientStop Color="#FFC3BCAE" Offset="1" />
                                    </LinearGradientBrush> ->
                                </Setter.Value>
                            </Setter>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush"
                                                         To="Yellow" Duration="0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation  Storyboard.TargetProperty="BorderBrush"
                                                         To="White" Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </local:ScrollDataGrid.CellStyle>
            -->
            
            <local:ScrollDataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Visibility"
                            Value="{Binding Converter={StaticResource BoolToInvisConv},
                                    Path=FilteredOut}"/>
                    <Setter Property="IsSelected" Value="{Binding Path=Checked, Mode=TwoWay}"/>
                </Style>
            </local:ScrollDataGrid.RowStyle>

            <local:ScrollDataGrid.RowHeaderStyle>
                <Style TargetType="{x:Type DataGridRowHeader}">
                    <Setter Property="Content" Value="{Binding
                        RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},
                        Path=Item.ID,
                        Mode=OneWay}"/>
                </Style>
            </local:ScrollDataGrid.RowHeaderStyle>

            <local:ScrollDataGrid.LayoutTransform>
                <ScaleTransform ScaleX="{Binding ElementName=MyClockDataGrid, Path=ZoomFactor, Mode=OneWay}"
                                ScaleY="{Binding ElementName=MyClockDataGrid, Path=ZoomFactor, Mode=OneWay}">
                    
                </ScaleTransform>
            </local:ScrollDataGrid.LayoutTransform>
            <local:ScrollDataGrid.Columns>
                <DataGridTemplateColumn Header="Icon">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="{Binding IconSource}" Height="18"
                                   ToolTipService.HasDropShadow="True"
                                   ToolTipService.ShowDuration="2147483647">
                                <Image.ToolTip>
                                    <Image Source="{Binding IconSource}"/>
                                </Image.ToolTip>
                            </Image>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Tag">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <xceed:RichTextBox Grid.Column="2" Margin="0,7,7,0"
                         AcceptsReturn="True" Name="MyTextBox"
                         AllowDrop="True" Text="{Binding Tag, Converter={StaticResource FlowDocToStringConv}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderBrush="Transparent"
                                               BorderThickness="0" Background="Transparent">
                                
                                <xceed:RichTextBox.Resources>
                                    <Style TargetType="Paragraph">
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Margin" Value="0"/>
                                    </Style>
                                </xceed:RichTextBox.Resources>

                                <local:WatermarkService.Watermark>
                                    <TextBlock Foreground="Gray" FontStyle="Italic">Type here...</TextBlock>
                                </local:WatermarkService.Watermark>

                                <xceed:RichTextBoxFormatBarManager.FormatBar>
                                    <xceed:RichTextBoxFormatBar/>
                                </xceed:RichTextBoxFormatBarManager.FormatBar>

                                <xceed:RichTextBox.TextFormatter>
                                    <xceed:XamlFormatter/>
                                </xceed:RichTextBox.TextFormatter>
                            </xceed:RichTextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="User Back Color">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <!--<Grid>-->
                            <!--<Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Label Content="{Binding UserBackColor,
                                    Converter={StaticResource DrawingColorToStringConv}}"
                                         Foreground="White"
                                         Background="{Binding UserBackColor,
                                            UpdateSourceTrigger=PropertyChanged,
                                            Converter={StaticResource DrawingColorToColorConv}}">
                                </Label>
                            </Grid>-->
                            <xceed:ColorPicker SelectedColor="{Binding UserBackColor,
                                    Converter={StaticResource DrawingColorToColorConv},
                                UpdateSourceTrigger=PropertyChanged,
                                    Mode=TwoWay}" UsingAlphaChannel="False"
                                               DisplayColorAndName="True"
                                               KeyDown="ColorPicker_KeyDown"
                                               FocusManager.FocusedElement="{Binding
                                    RelativeSource={RelativeSource Self}}"
                                               IsEnabled="{Binding ElementName=MyDataGrid, Path=IsReadOnly,
                                                Converter={StaticResource InverseBoolConv}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridComboBoxColumn Header="Type"
                        TextBinding="{Binding ClockType}">
                    <DataGridComboBoxColumn.ItemsSource>
                        <x:Array Type="{x:Type sys:String}">
                            <sys:String>Timer</sys:String>
                            <sys:String>Alarm</sys:String>
                        </x:Array>
                    </DataGridComboBoxColumn.ItemsSource>
                </DataGridComboBoxColumn>

                <DataGridTemplateColumn Header="Group Name">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label Content="{Binding GroupName, Mode=OneWay}">
                            </Label>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox IsEditable="True" StaysOpenOnEdit="True"
                                        ItemsSource="{Binding Path=Clocks.Model.GroupsVM.VMs,
                                RelativeSource={RelativeSource AncestorType=local:ClockDataGrid}}"
                                        PreviewKeyDown="ComboBox_PreviewKeyDown"
                                        SelectionChanged="ComboBox_SelectionChanged"
                                        Text="{Binding GroupName}">
                                <ComboBox.Resources>
                                    <Style TargetType="ComboBoxItem">
                                        <Setter Property="FontStyle" Value="{Binding FontStyle}"/>
                                        <Setter Property="Foreground" Value="{Binding Foreground}"/>
                                    </Style>
                                </ComboBox.Resources>
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridCheckBoxColumn Header="Unsaved" IsReadOnly="True"
                                        Binding="{Binding IsUnsaved}">
                </DataGridCheckBoxColumn>

                <DataGridTemplateColumn Header="Current Value"
                                        CellEditingTemplate="{StaticResource CurrentValueColumnCellEditingTemplate}">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource BaseDGColumnHeaderStyle}">
                            <Setter Property="ToolTip" Value="Remaining Time Span / Ringing Time">
                            </Setter>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding CurrentValue}"></TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Reset-to Value"
                                        CellEditingTemplate="{StaticResource ResetToValueColumnCellEditingTemplate}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ResetToValue}"></TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridCheckBoxColumn Header="Reset-to Value Locked"
                                        Binding="{Binding ResetToValueLocked}">
                </DataGridCheckBoxColumn>

                <!-- command buttons -->
                <DataGridTemplateColumn Header="" IsReadOnly="True"
                                        CellTemplate="{StaticResource ButtonsColumnCellTemplate}">
                    <!-- Not working: Visibility="{Binding Path=ImportMode,
                                            Converter={StaticResource BoolToInvisibilityConv},
                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ClockDataGrid}}" -->
                </DataGridTemplateColumn>
            </local:ScrollDataGrid.Columns>
        </local:ScrollDataGrid>
    </Grid>
</UserControl>
